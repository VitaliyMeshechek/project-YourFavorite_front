{"version":3,"file":"static/js/702.1e1b6a8b.chunk.js","mappings":"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","sources":["pages/AddPetPage/AddPetPage.styled.jsx","components/AddPetCard/PetPageForm/PetPageForm.styled.jsx","components/AddPetCard/validatePet.jsx","components/AddPetCard/Modal/Modal.styled.jsx","components/AddPetCard/Modal/Modal.jsx","components/AddPetCard/AddFormButton/AddFormButton.styled.jsx","components/AddPetCard/AddFormButton/AddFormButtonBack.jsx","components/AddPetCard/AddFormButton/AddFormButtonNext.jsx","components/AddPetCard/AddPetModal/AddPetModal.styled.jsx","components/AddPetCard/AddPetModal/AddPetModal.jsx","components/AddPetCard/ErrorMessage/ErrorMessage.styled.jsx","components/AddPetCard/ErrorMessage/ErrorMessage.jsx","components/AddPetCard/PersonalForm/PersonalForm.styled.jsx","components/AddPetCard/MoreInfoForm/MoreInfoForm.styled.jsx","components/AddPetCard/ChooseForm/ChooseForm.styled.jsx","components/AddPetCard/MoreInfoForm/MoreInfoForm.jsx","components/AddPetCard/ChooseForm/ChooseForm.jsx","components/AddPetCard/PersonalForm/PersonalForm.jsx","components/AddPetCard/PetPageForm/PetPageForm.jsx","pages/AddPetPage/AddPetPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { breakPoints, colors } from 'base-styles/variables';\n\nexport const AddFormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px 8px 17px;\n\n  width: 100%;\n  min-height: 496px;\n  background:  ${colors.white};\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 40px;\n\n  @media screen and (min-width:  ${breakPoints.tablet}) {\n    margin: 0 auto;\n    padding: 20px 32px;\n    margin-top: 108px;\n    width: fit-content;\n    min-width: 458px;\n  }\n`;\n\n// @media screen and (min-width: 768px){\n//     width: 704px;\n//     padding-bottom: 121px;\n// }\n// @media screen and (min-width: 1280px){\n//  width:1248px;\n//  display: flex;\n// }","import styled from '@emotion/styled';\nimport { Form } from 'formik';\nimport { breakPoints, colors } from 'base-styles/variables';\n\nexport const AddForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n`;\n  \nexport const AddFormTitle = styled.h1`\n  font-weight: 500;\n  padding-left: 12px;\n  margin-bottom: 24px;\n  line-height: 1.35;\n  font-size: 20px;\n  color: ${colors.black};\n`;\n\nexport const AddFormList = styled.ul`\n  display: flex;\n  column-gap: 12px;\n  margin-bottom: 16px;\n`;\n\nexport const AddFormItem = styled.li`\n  position: relative;\n  padding-bottom: 20px;\n  flex-basis: calc((100% - 24px) / 3);\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 8px;\n    background-color:  ${colors.blueLight};\n    border-radius: 8px;\n  }\n\n  &.current::after {\n    background-color:  ${colors.blue};\n  }\n\n  &.completed::after {\n    background-color: ${colors.green};\n  }\n`;\n\nexport const AddFormStepName = styled.p`\n  font-weight: 500;\n  font-size: 10px;\n  line-height: 1.4;\n  color:  ${colors.blue};\n\n  @media screen and (min-width: ${breakPoints.tablet}) {\n    font-size: 16px;\n    line-height: 1.62;\n  }\n`;\n  // ${AddFormItem}.current & {\n  //   color: #54ADFF;\n  // }\n\n  // ${AddFormItem}.completed & {\n  //   color: #00C3AD;\n  // }\n\nexport const AddFormButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 24px;\n  @media screen and (min-width: ${breakPoints.tablet}) {\n    flex-direction: row-reverse;\n    justify-content: ${({ category, isMoreInfo }) => category !== 'your pet' ? 'center' && isMoreInfo : 'end'};\n    margin-top: 40px;\n    column-gap: 24px;\n  }\n`;\n","import * as Yup from 'yup';\n\nexport const validatePetSchema = Yup.object().shape({\n  title: Yup.string()\n    .required('Title is required')\n    .min(2, 'Name must be at least 2 characters')\n    .max(16, 'Name must not exceed 16 characters'),\n  category: Yup.string()\n    .required('Category is required')\n    .oneOf(['your pet', 'sell', 'lost-found', 'for-free'], 'Invalid category'),\n  name: Yup.string()\n    .required('Name is required')\n    .min(2, 'Name must be at least 2 characters')\n    .max(16, 'Name must not exceed 16 characters'),\n  birthday: Yup.string()\n    .required('Date is required')\n    .matches(\n      /^(\\d{2})\\.(\\d{2})\\.(\\d{4})$/,\n      'Invalid date format. Use DD.MM.YYYY'\n    ),\n  breed: Yup.string()\n    .required('Breed is required')\n    .min(2, 'Breed must be at least 2 characters')\n    .max(16, 'Breed must not exceed 16 characters'),\n  avatarUrl: Yup.mixed()\n    .required('File is required')\n    .test(\n      'fileSize',\n      'File size must not exceed 3MB',\n      value => value && value.size <= 3 * 1024 * 1024\n    ),\n  sex: Yup.string()\n    .required('Sex is required')\n    .oneOf(['male', 'female'], 'Invalid sex'),\n  location: Yup.string()\n    .required('Location is required')\n    .matches(/^[A-Za-z\\s]+$/i, 'Invalid location format'),\n  price: Yup.number()\n    .positive('Price must be greater than 0')\n    .required('Price is required'),\n  comments: Yup.string().test(\n    'comments',\n    'Comments must be between 10 and 120 characters',\n    value => {\n      if (!value) {\n        return true;\n      }\n      return value.length >= 10 && value.length <= 120;\n    }\n  ),\n});\n\nexport const validateField = async (fieldName, value, setErrors) => {\n  try {\n    await validatePetSchema.validateAt(fieldName, value);\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [fieldName]: '',\n    }));\n  } catch (error) {\n    console.log(error);\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [fieldName]: error.message,\n    }));\n  }\n};\n","import styled from '@emotion/styled';\nimport { colors, breakPoints } from 'base-styles/variables';\nimport { VscClose } from 'react-icons/vsc';\n\nexport const Backdrop = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100vw;\n  height: 100vh;\n\n  background: rgba(87, 86, 86, 0.6);\n  z-index: 1200000000000000000000000000000000000000000;\n`;\n\nexport const ModalWindow = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n  width: 280px;\n  padding: 60px 12px;\n\n  text-align: center;\n  border-radius: 20px;\n  background-color: ${colors.white};\n\n  z-index: 100000000;\n\n  @media screen and (min-width: ${breakPoints.tablet}) {\n    justify-content: center;\n\n    width: 608px;\n    height: 354px;\n    border-radius: 40px;\n  }\n`;\n\nexport const CloseBtn = styled.button`\n  display: flex;\n\n  position: absolute;\n  top: 12px;\n  right: 12px;\n\n  width: 24px;\n  height: 24px;\n\n  @media screen and (min-width: ${breakPoints.tablet}) {\n    top: 24px;\n    right: 24px;\n  }\n`;\n\nexport const CloseIcon = styled(() => (\n  <VscClose\n    color={colors.blue}\n    style={{\n      width: '24px',\n      height: '24px',\n    }}\n  >\n    <button></button>\n  </VscClose>\n))``;","// import PropTypes from 'prop-types';\n// import { useLocation } from 'react-router-dom';\nimport { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { CloseIcon } from './Modal.styled';\nimport { Backdrop, ModalWindow, CloseBtn } from './Modal.styled';\n\nconst modalContainer = document.getElementById('modal-root');\n\n//додати у батьківський компонент (сторінку) наступний код:\n// - state:\n// const [isModalOpen, setIsModalOpen] = useState(false);\n\n// - функцію:\n// const toggleModal = () => {\n//   setIsModalOpen(prevState => !prevState);\n// };\n\n// - приклад використання:\n// {isModalOpen && (\n//     <Modal toggleModal={toggleModal}>\n//       {children}\n//     </Modal>\n//   );}\n\nconst Modal = ({ toggleModal, children }) => {\n  // const location = useLocation();\n  // const inNoticePage = location.pathname.includes('notices');\n\n  useEffect(() => {\n    const onKeyDown = event => {\n      if (event.code === 'Escape') {\n        toggleModal();\n      }\n    };\n\n    document.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  }, [toggleModal]);\n\n  const onModalOpen = event => {\n    if (event.target === event.currentTarget) {\n      toggleModal();\n    }\n  };\n\n  return createPortal(\n    <>\n      <Backdrop onClick={onModalOpen}>\n        <ModalWindow>\n          <CloseBtn type=\"button\" onClick={toggleModal}>\n            <CloseIcon />\n          </CloseBtn>\n          {children}\n        </ModalWindow>\n      </Backdrop>\n    </>,\n    modalContainer\n  );\n};\n\n// Modal.propTypes = {\n//   toggleModal: PropTypes.func.isRequired,\n//   title: PropTypes.string,\n//   children: PropTypes.node.isRequired,\n// };\n\nexport default Modal;\n","import styled from '@emotion/styled';\n\nimport { Link } from 'react-router-dom';\nimport { colors } from 'base-styles/variables';\n\nexport const NextButton = styled.button`\n  z-index: 10;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8 0;\n  gap: 12px;\n  min-width: 248px;\n  color: ${colors.white};\n  background-color: ${colors.blue};\n  font-weight: 700;\n  line-height: 1.38;\n  border: none;\n  border-radius: 40px;\n  transition: color 300ms 3px 8px 14px rgba(136, 198, 253, 0.19),\n  background-color 300ms 3px 8px 14px rgba(136, 198, 253, 0.19);\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    z-index: -1;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: linear-gradient(290.46deg, #419EF1 0%, #9BD0FF 107.89%);\n    opacity: 0;\n    transition: opacity 300ms 3px 8px 14px rgba(136, 198, 253, 0.19);\n  }\n  &:hover,\n  &:focus {\n    background-color: ${({ filled }) => filled && 'transparent'};\n  }\n  &:hover::before,\n  &:focus::before {\n    opacity: 1;\n  }\n  & svg {\n    fill: currentColor;\n  }\n  &:disabled {\n    color: ${colors.gray};\n    background-color: ${colors.blueLight};\n    border-color: ${colors.blueLight};\n    pointer-events: none;\n  }\n`;\n\nexport const BackButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  padding: 8 0;\n  max-height: 40px;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.38;\n  color: ${colors.blue};\n  background-color: transparent;\n  border: none;\n  transition: color 300ms 3px 8px 14px rgba(136, 198, 253, 0.19);\n  & svg {\n    stroke: currentColor;\n  }\n`;\n\nexport const BackLink = styled(Link)`\n display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  color: ${colors.blue};\n  max-height: 40px;\n  font-weight: 700;\n  line-height: 1.38;\n  background-color: transparent;\n  border-radius: 40px;\n  cursor: pointer;\n  }\n`;\n\n","// import PropTypes from 'prop-types';\nimport { BackButton, BackLink } from './AddFormButton.styled';\nimport { BsArrowLeft } from 'react-icons/bs';\n\nconst AddFormButtonBack = ({ text, clickHandler, type, isLink, path }) => {\n  if (isLink) {\n    return (\n      <BackLink onClick={clickHandler} type={type} to={path}>\n        <BsArrowLeft style={{ fill: '#54ADFF', width: '16px', height: '12px' }}/>\n        {text}\n      </BackLink>\n    );\n  }\n\n  return (\n    <BackButton onClick={clickHandler} type={type}>\n      <BsArrowLeft style={{ fill: '#54ADFF', width: '16px', height: '12px' }}/>\n      {text}\n    </BackButton>\n  );\n};\n\n// AddFormButtonBack.propTypes = {\n//   text: PropTypes.string.isRequired,\n//   clickHandler: PropTypes.func,\n//   isLink: PropTypes.bool.isRequired,\n//   type: PropTypes.string,\n//   path: PropTypes.oneOfType([\n//     PropTypes.string,\n//     PropTypes.objectOf(PropTypes.string),\n//   ]),\n// };\n\nexport default AddFormButtonBack;\n","// import PropTypes from 'prop-types';\nimport { NextButton } from './AddFormButton.styled';\n\nconst AddFormButtonNext = ({\n  text,\n  icon,\n  clickHandler,\n  filled,\n  short,\n  type,\n  isDisabled,\n}) => {\n  return (\n    <NextButton\n      type={type}\n      onClick={clickHandler && (() => clickHandler(false))}\n      filled={filled}\n      short={short}\n      disabled={isDisabled}\n    >\n      {text}\n      {icon}\n    </NextButton>\n  );\n};\n\n// AddFormButtonNext.propTypes = {\n//   text: PropTypes.string.isRequired,\n//   icon: PropTypes.node,\n//   clickHandler: PropTypes.func,\n//   isDisabled: PropTypes.bool.isRequired,\n// };\n\nexport default AddFormButtonNext;\n","import styled from '@emotion/styled';\nimport { breakPoints } from 'base-styles/variables';\n\n\nexport const AddFormModalWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 44px 20px;\n\n  text-align: center;\n  font-weight: 500;\n  font-size: 20px;\n\n  @media screen and (min-width: ${breakPoints.tablet}) {\n    padding: 64px 32px;\n    font-size: 28px;\n  }\n`;\n","// import PropTypes from 'prop-types';\n\nimport { useNavigate } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n\n// import { selectNoticesError } from 'redux/notices/selectors';\n// import { selectError } from 'redux/auth/selectors';\n\nimport AddFormButtonBack from '../AddFormButton/AddFormButtonBack';\nimport AddFormButtonNext from '../AddFormButton/AddFormButtonNext';\n// import { PawPrintIcon } from 'shared/utils/icons';\nimport { TbPaw } from \"react-icons/tb\";\nimport { AddFormButtonWrapper } from '../PetPageForm/PetPageForm.styled';\nimport { AddFormModalWrapper } from './AddPetModal.styled';\n\nconst AddPetModal = ({ backLink, category }) => {\n  const navigate = useNavigate();\n  // const addMyPetError = useSelector(selectError);\n  // const addPetError = useSelector(selectNoticesError);\n  // const isError = Boolean(addMyPetError) || Boolean(addPetError);\n  // const text = isError\n  //   ? 'Something went wrong, please try again.'\n  //   : 'Pet was successfully added!';\n\n  const buttonText =\n    category === 'your pet' ? 'Go to profile' : 'Go to your adds';\n  const path = category === 'your pet' ? '/user' : '/notices/my-pets';\n  return (\n    <AddFormModalWrapper>\n      <p>'Pet was successfully added!'</p>\n      <AddFormButtonWrapper>\n        <AddFormButtonNext\n          type=\"button\"\n          text={buttonText}\n          icon={<TbPaw style={{ stroke: '#FEF9F9', width: '24px', height: '24px' }}/>}\n          clickHandler={() => {\n            navigate(path);\n          }}\n          filled={false}\n          isDisabled={false}\n        />\n        <AddFormButtonBack\n          type=\"button\"\n          clickHandler={() => navigate(backLink)}\n          text=\"Back\"\n          isLink={false}\n        />\n      </AddFormButtonWrapper>\n    </AddFormModalWrapper>\n  );\n};\n\n// AddPetModal.propTypes = PropTypes.shape({\n//   backLink: PropTypes.string.isRequired,\n//   category: PropTypes.string.isRequired,\n// });\n\nexport default AddPetModal;\n","import styled from '@emotion/styled';\nimport { colors } from 'base-styles/variables';\n\nexport const ErrorText = styled.p`\n  position: absolute;\n  bottom: -4px;\n  left: 16px;\n  font-size: 12px;\n  line-height: 1.33;\n  color: ${colors.red};\n  transform: translateY(100%);\n`;\n","import { ErrorText } from './ErrorMessage.styled';\n\nconst ErrorMessage = ({ message }) => {\n  return <ErrorText>{message}</ErrorText>;\n};\n\nexport default ErrorMessage;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\nimport { breakPoints, colors } from 'base-styles/variables';\n\nexport const PersonalFormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  padding: 16px 0 24px;\n  gap: 20px;\n`;\n\nexport const AddFormLabelWrapper = styled.div`\n  position: relative;\n`;\n\nexport const AddFormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.36;\n  color: ${colors.black};\n\n  @media screen and (min-width: ${breakPoints.tablet}) {\n    gap: 8px;\n    font-size: 20px;\n    line-height: 1.3;\n  }\n`;\n\nexport const AddFormInput = styled(Field)`\n  padding: 10px 16px;\n  font-size: 14px;\n  line-height: 1.5;\n  border: 1px solid ${colors.blue};\n  border-radius: 40px;\n  outline-color: ${colors.blue};\n  transition: outline 300ms 3px 8px 14px rgba(136, 198, 253, 0.19);\n\n  @media screen and (min-width: ${breakPoints.tablet}) {\n    font-size: 16px;\n    min-width: 394px;\n    padding: 12px 16px;\n  }\n  &[type='date']::-webkit-calendar-picker-indicator {\n    cursor: pointer;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\nimport { breakPoints, colors } from 'base-styles/variables';\n\nexport const MoreInfoFormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  padding: 16px 0 24px;\n  gap: 20px;\n    @media screen and (min-width: ${breakPoints.tablet}) {\n    ${({ category }) =>\n      category !== 'your pet' ? 'flex-direction: row; column-gap:44px' : ''};\n  }\n`;\n\nexport const FirstPartFormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n    @media screen and (min-width: ${breakPoints.tablet}) {\n    ${({ category }) => (category !== 'your pet' ? 'row-gap: 48px;' : '')};\n  }\n`;\n\nexport const SecondPartFormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  @media screen and (min-width: ${breakPoints.tablet}) {\n    gap: 24px;\n  }\n`;\n\nexport const FileInput = styled(Field)`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const AddFormTextAreaLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.36;\n  color: ${colors.black};\n  @media screen and (min-width: ${breakPoints.tablet}) {\n    gap: 8px;\n    font-size: 20px;\n    line-height: 1.3;\n    height: 100%;\n  }\n`;\n\n\nexport const AddFormTextArea = styled(Field)`\npadding: 10px 16px;\n  font-size: 14px;\n  line-height: 1.5;\n  border: 1px solid #54ADFF;\n  border-radius: 40px;\n  outline-color: #54ADFF;\n  transition: outline 300ms 3px 8px 14px rgba(136, 198, 253, 0.19);\n  @media screen and (min-width: ${breakPoints.tablet}) {\n    font-size: 16px;\n    min-width: 394px;\n    padding: 12px 16px;\n    height: 108px;\n  }\n  &[type='date']::-webkit-calendar-picker-indicator {\n    cursor: pointer;\n  }\n  resize: none;\n  height: 92;\n  flex-grow: 1;\n  border-radius: 20px;\n`;\n\nexport const AddFormSexWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 8px;\n  column-gap: 16px;\n\n  @media screen and (min-width: ${breakPoints.tablet}) {\n    row-gap: 20px;\n    font-size: 20px;\n    line-height: 1.3;\n  }\n  & p {\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 1.36;\n    color: ${colors.black};\n  }\n`;\n\nexport const AddFormRadioWrapper = styled.div`\n  display: inherit;\n`;\n\nexport const AddFormSexLabel = styled.label`\n  display: flex;\n  column-count: 12px;\n  align-items: center;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${colors.gray};\n  cursor: pointer;\n  transition: color 300ms 3px 8px 14px rgba(136, 198, 253, 0.19);\n  &:hover {\n    color: ${colors.blue};\n  }\n`;\n\n//   ${AddFormRadioButton}:checked + & {   color: #111111;  }\n\nexport const AddFormImageLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.36;\n  color: ${colors.black};\n\n  @media screen and (min-width: ${breakPoints.tablet}) {\n    gap: 8px;\n    font-size: 20px;\n    line-height: 1.3;\n       ${({ category }) =>\n      category !== 'your pet' ? 'flex-direction: column' : ''};\n  }\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  column-gap: 28px;\n`;\nexport const AddFormImageWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 112px;\n  height: 112px;\n  background-color: ${colors.blueLight};\n  border-radius: 20px;\n  color: ${colors.blue};\n  cursor: pointer;\n  overflow: hidden;\n  object-position: center;\n  object-fit: cover;\n  & svg {\n    stroke: currentColor;\n  }\n\n  @media screen and (min-width: ${breakPoints.tablet}) {\n    min-width: 182px;\n    height: 182px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\nimport { colors } from 'base-styles/variables';\n\nexport const CategoryWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  padding-top: 24px;\n  row-gap: 12px;\n`;\n\nexport const AddFormRadioButton = styled(Field)`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const RadioCategoryLabel = styled.label`\n  padding: 8px 16px;\n  width: fit-content;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n  color: ${colors.blue};\n  background-color: ${colors.blueLight};\n  border-radius: 40px;\n  cursor: pointer;\n  transition: color 300ms 3px 8px 14px rgba(136, 198, 253, 0.19),\n  background-color 300ms 3px 8px 14px rgba(136, 198, 253, 0.19);\n  &:hover,\n  &:focus,\n  &:checked + & {\n    background-color: ${colors.blue};\n    color: ${colors.white};\n  }\n`;\n\n  // &:hover,\n  // &:focus,\n  // ${AddFormRadioButton}:checked + & {\n  //   background-color: ${colors.blue};\n  //   color: ${colors.white};\n  // }","import { useState, useEffect } from 'react';\n// import PropTypes from 'prop-types';\n\nimport { AddFormButtonWrapper } from '../PetPageForm/PetPageForm.styled';\nimport AddFormButtonBack from '../AddFormButton/AddFormButtonBack';\nimport AddFormButtonNext from '../AddFormButton/AddFormButtonNext';\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\nimport { TbPaw } from \"react-icons/tb\";\nimport { BsPlus } from 'react-icons/bs';\nimport { GiFemale } from 'react-icons/gi';\nimport { GiMale } from 'react-icons/gi';\nimport { validateField } from '../validatePet';\n\nimport {\n  AddFormInput,\n  AddFormLabel,\n  AddFormLabelWrapper,\n} from '../PersonalForm/PersonalForm.styled';\nimport {\n  AddFormTextArea,\n  AddFormSexWrapper,\n  AddFormSexLabel,\n  AddFormImageWrapper,\n  AddFormImageLabel,\n  FileInput,\n  FirstPartFormWrapper,\n  SecondPartFormWrapper,\n  MoreInfoFormWrapper,\n  AddFormRadioWrapper,\n  AddFormTextAreaLabel,\n} from './MoreInfoForm.styled';\nimport { AddFormRadioButton } from '../ChooseForm/ChooseForm.styled';\n\nconst MoreInfo = ({ formData, setFormData, submit, backStep }) => {\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [errors, setErrors] = useState({});\n  const [imageValue, setImageValue] = useState('');\n  const [viewportWidth, setViewportWidth] = useState(window.innerWidth);\n\n  const isAvatarURLFieldValid = Boolean(!errors.avatarUrl && !!formData.avatarUrl);\n  const isCommentsFieldValid = Boolean(!errors.comments);\n  const isLocationFieldValid = Boolean(!errors.location && !!formData.location);\n  const isSexFieldValid = Boolean(!errors.sex && !!formData.sex);\n  const isPriceFieldValid = Boolean(!errors.price && !!formData.price);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setViewportWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\nuseEffect(() => {\n    if (formData.category === 'sell') {\n      setIsDisabled(\n        !(\n          isAvatarURLFieldValid &&\n          isLocationFieldValid &&\n          isSexFieldValid &&\n          isPriceFieldValid &&\n          isCommentsFieldValid\n        )\n      );\n    }\n    if (formData.category === 'your pet') {\n      setIsDisabled(!(isAvatarURLFieldValid && isCommentsFieldValid));\n    } else {\n      setIsDisabled(\n        !(\n          isAvatarURLFieldValid &&\n          isLocationFieldValid &&\n          isSexFieldValid &&\n          isCommentsFieldValid\n        )\n      );\n    }\n  }, [\n    errors,\n    formData.category,\n    isCommentsFieldValid,\n    isLocationFieldValid,\n    isAvatarURLFieldValid,\n    isPriceFieldValid,\n    isSexFieldValid,\n  ]);\n\n  const handleInputChange = e => {\n    const { name, value, type, files } = e.target;\n    const fieldValue = type === 'file' ? files[0] : value;\n\n    if (type === 'file') {\n      setImageValue(value);\n    }\n\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: fieldValue,\n    }));\n  };\n\n return (\n    <>\n      <MoreInfoFormWrapper category={formData.category}>\n        <FirstPartFormWrapper category={formData.category}>\n          {formData.category !== 'your pet' && (\n            <AddFormSexWrapper>\n              <p>The Sex</p>\n              <AddFormRadioWrapper>\n                <AddFormRadioButton\n                  type=\"radio\"\n                  id=\"female\"\n                  name=\"sex\"\n                  value=\"female\"\n                  onChange={handleInputChange}\n                  checked={formData.sex === 'female'}\n                  onBlur={() => validateField('sex', formData, setErrors)}\n                />\n                <AddFormSexLabel htmlFor=\"female\">\n                  <GiFemale stroke=\"#F43F5E\" />\n                  Female\n                </AddFormSexLabel>\n                <AddFormRadioButton\n                  type=\"radio\"\n                  id=\"male\"\n                  name=\"sex\"\n                  value=\"male\"\n                  onChange={handleInputChange}\n                  checked={formData.sex === 'male'}\n                  onBlur={() => validateField('sex', formData, setErrors)}\n                />\n                <AddFormSexLabel htmlFor=\"male\">\n                    <GiMale stroke=\"#54ADFF\" />\n                  Male\n                </AddFormSexLabel>\n              </AddFormRadioWrapper>\n            </AddFormSexWrapper>\n          )}\n          <AddFormImageLabel htmlFor=\"pet-image\" category={formData.category}>\n            {formData.category === 'your pet' || viewportWidth < 768\n              ? 'Add photo'\n              : 'Load the pet’s image:'}\n            <AddFormImageWrapper>\n              {!formData.avatarUrl && <BsPlus width=\"30\" height=\"30\" />}\n              {!!formData.avatarUrl && (\n                <img\n                  id=\"image\"\n                  src={URL.createObjectURL(formData.avatarUrl)}\n                  alt={formData.avatarUrl.name}\n                />\n              )}\n            </AddFormImageWrapper>\n            <FileInput\n              type=\"file\"\n              id=\"pet-image\"\n              name=\"avatarUrl\"\n              accept=\".png, .jpg, .jpeg, .webp\"\n              onChange={handleInputChange}\n              value={imageValue}\n              onBlur={() => validateField('avatarUrl', formData, setErrors)}\n            />\n          </AddFormImageLabel>\n        </FirstPartFormWrapper>\n        <SecondPartFormWrapper>\n          {formData.category !== 'your pet' && (\n            <AddFormLabelWrapper>\n              <AddFormLabel htmlFor=\"location\">\n                Location\n                <AddFormInput\n                  placeholder=\"Type of location\"\n                  type=\"text\"\n                  name=\"location\"\n                  onChange={handleInputChange}\n                  value={formData.location}\n                  onBlur={() => validateField('location', formData, setErrors)}\n                  className={errors.location ? 'invalid' : ''}\n                />\n              </AddFormLabel>\n              {!!errors.location && <ErrorMessage message={errors.location} />}\n            </AddFormLabelWrapper>\n          )}\n          {formData.category === 'sell' && (\n            <AddFormLabelWrapper>\n              <AddFormLabel htmlFor=\"price\">\n                Price\n                <AddFormInput\n                  placeholder=\"Type of price\"\n                  type=\"number\"\n                  name=\"price\"\n                  onChange={handleInputChange}\n                  value={formData.price}\n                  onBlur={() => validateField('price', formData, setErrors)}\n                  className={errors.price ? 'invalid' : ''}\n                />\n              </AddFormLabel>\n              {!!errors.price && <ErrorMessage message={errors.price} />}\n            </AddFormLabelWrapper>\n          )}\n          <AddFormLabelWrapper>\n            <AddFormTextAreaLabel htmlFor=\"comments\">\n              Comments\n              <AddFormTextArea\n                component=\"textarea\"\n                placeholder=\"Type comments\"\n                name=\"comments\"\n                onChange={handleInputChange}\n                value={formData.comments}\n                onBlur={() => validateField('comments', formData, setErrors)}\n                className={errors.comments ? 'invalid' : ''}\n              />\n            </AddFormTextAreaLabel>\n            {!!errors.comments && <ErrorMessage message={errors.comments} />}\n          </AddFormLabelWrapper>\n        </SecondPartFormWrapper>\n      </MoreInfoFormWrapper>\n      <AddFormButtonWrapper isMoreInfo={true} category={formData.category}>\n        <AddFormButtonNext\n          type=\"submit\"\n          text=\"Done\"\n          icon={< TbPaw />}\n          filled={true}\n          clickHandler={submit}\n          isDisabled={isDisabled}\n        />\n        <AddFormButtonBack\n          type=\"button\"\n          clickHandler={backStep}\n          text=\"Back\"\n          isLink={false}\n        />\n      </AddFormButtonWrapper>\n    </>\n  );\n};\n\n\n// MoreInfo.propTypes = {\n//   formData: PropTypes.object.isRequired,\n//   setFormData: PropTypes.func.isRequired,\n//   backStep: PropTypes.func.isRequired,\n//   submit: PropTypes.func.isRequired,\n//   isValid: PropTypes.bool.isRequired,\n// };\n\nexport default MoreInfo;\n","// import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n\nimport { AddFormButtonWrapper } from '../PetPageForm/PetPageForm.styled';\nimport AddFormButtonBack from '../AddFormButton/AddFormButtonBack';\nimport AddFormButtonNext from '../AddFormButton/AddFormButtonNext';\nimport { TbPaw } from \"react-icons/tb\";\n\nimport {\n  AddFormRadioButton,\n  RadioCategoryLabel,\n  CategoryWrapper,\n} from './ChooseForm.styled';\n\nconst ChooseForm = ({ formData, setFormData, nextStep, cancel, setValues }) => {\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  useEffect(() => {\n    if (!formData.category) setIsDisabled(true);\n    else setIsDisabled(false);\n  }, [formData.category]);\n\n  const handleCategoryChange = e => {\n    const { name, value } = e.target;\n\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <CategoryWrapper>\n      <AddFormRadioButton\n        type=\"radio\"\n        name=\"category\"\n        value=\"your pet\"\n        id=\"your pet\"\n        onChange={handleCategoryChange}\n        checked={formData.category === 'your pet'}\n      />\n      <RadioCategoryLabel htmlFor=\"your pet\">Your pet</RadioCategoryLabel>\n      <AddFormRadioButton\n        type=\"radio\"\n        name=\"category\"\n        value=\"sell\"\n        id=\"sell\"\n        checked={formData.category === 'sell'}\n        onChange={handleCategoryChange}\n      />\n      <RadioCategoryLabel htmlFor=\"sell\">Sell</RadioCategoryLabel>\n      <AddFormRadioButton\n        type=\"radio\"\n        name=\"category\"\n        value=\"lost-found\"\n        id=\"lost-found\"\n        checked={formData.category === 'lost-found'}\n        onChange={handleCategoryChange}\n      />\n      <RadioCategoryLabel htmlFor=\"lost-found\">Lost/found</RadioCategoryLabel>\n      <AddFormRadioButton\n        type=\"radio\"\n        name=\"category\"\n        value=\"for-free\"\n        id=\"for-free\"\n        checked={formData.category === 'for-free'}\n        onChange={handleCategoryChange}\n      />\n      <RadioCategoryLabel htmlFor=\"for-free\">In good hands</RadioCategoryLabel>\n      <AddFormButtonWrapper>\n        <AddFormButtonNext\n          isDisabled={isDisabled}\n          type=\"button\"\n          text=\"Next\"\n          icon={<TbPaw style={{ stroke: '#FEF9F9', width: '24px', height: '24px' }}/>}\n          clickHandler={nextStep}\n          filled={false}\n        />\n        <AddFormButtonBack text=\"Cancel\" isLink={true} path={cancel} />\n      </AddFormButtonWrapper>\n    </CategoryWrapper>\n  );\n};\n\n// ChooseForm.propTypes = {\n//   formData: PropTypes.object.isRequired,\n//   setFormData: PropTypes.func.isRequired,\n//   cancel: PropTypes.oneOfType([\n//     PropTypes.string.isRequired,\n//     PropTypes.object.isRequired,\n//   ]),\n//   nextStep: PropTypes.func.isRequired,\n// };\n\nexport default ChooseForm;\n","// import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n\nimport { AddFormButtonWrapper } from '../PetPageForm/PetPageForm.styled';\nimport AddFormButtonBack from '../AddFormButton/AddFormButtonBack';\nimport AddFormButtonNext from '../AddFormButton/AddFormButtonNext';\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\nimport { TbPaw } from \"react-icons/tb\";\n\nimport {\n  PersonalFormWrapper,\n  AddFormLabel,\n  AddFormInput,\n  AddFormLabelWrapper,\n} from './PersonalForm.styled';\n\nimport { validateField } from '../validatePet';\n\nconst PersonalForm = ({ formData, setFormData, nextStep, backStep }) => {\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [errors, setErrors] = useState({});\n    const [maxDate, setMaxDate] = useState();\n\n\n  const isNameFieldValid = Boolean(!errors.name && !!formData.name);\n  const isBirthdayFieldValid = Boolean(!errors.birthday && !!formData.birthday);\n  const isBreedFieldValid = Boolean(!errors.breed && !!formData.breed);\n  const isTitleFieldValid = Boolean(!errors.title && !!formData.title);\n\n  useEffect(() => {\n    if (formData.category === 'your pet') {\n      setIsDisabled(\n        !(isNameFieldValid && isBirthdayFieldValid && isBreedFieldValid)\n      );\n    }\n\n    if (formData.category !== 'your pet') {\n      setIsDisabled(\n        !(\n          isNameFieldValid &&\n          isBirthdayFieldValid &&\n          isBreedFieldValid &&\n          isTitleFieldValid\n        )\n      );\n    }\n    setMaxDate(getCurrentDate());\n  }, [\n    errors,\n    formData.category,\n    isBirthdayFieldValid,\n    isBreedFieldValid,\n    isNameFieldValid,\n    isTitleFieldValid,\n  ]);\n  \n  function getCurrentDate() {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, '0');\n    const day = String(now.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  }\n\n    const handleInputChange = e => {\n    const { name, value } = e.target;\n\n    setErrors(prevState => ({ ...prevState, [name]: '' }));\n\n    const inputValue =\n      name === 'birthday'\n        ? new Date(value).toLocaleDateString('uk-UA', {\n            day: '2-digit',\n            month: '2-digit',\n            year: 'numeric',\n          })\n        : value;\n\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: inputValue,\n    }));\n  };\n\n  return (\n    <PersonalFormWrapper>\n      {formData.category !== 'your pet' && (\n        <AddFormLabelWrapper>\n          <AddFormLabel htmlFor=\"title\">\n            Title of add:\n            <AddFormInput\n              placeholder=\"Type title\"\n              type=\"text\"\n              name=\"title\"\n              value={formData.title}\n              onChange={handleInputChange}\n              onBlur={() => validateField('title', formData, setErrors)}\n              className={errors.title ? 'invalid' : ''}\n            />\n          </AddFormLabel>\n          {!!errors.title && <ErrorMessage message={errors.title} />}\n        </AddFormLabelWrapper>\n      )}\n      <AddFormLabelWrapper>\n        <AddFormLabel htmlFor=\"name\">\n          Name:\n          <AddFormInput\n            placeholder=\"Type name pet\"\n            type=\"text\"\n            name=\"name\"\n            onChange={handleInputChange}\n            value={formData.name}\n            onBlur={() => validateField('name', formData, setErrors)}\n            className={errors.name ? 'invalid' : ''}\n          />\n        </AddFormLabel>\n        {!!errors.name && <ErrorMessage message={errors.name} />}\n      </AddFormLabelWrapper>\n      <AddFormLabelWrapper>\n        <AddFormLabel htmlFor=\"birthday\">\n          Birthday:\n          <AddFormInput\n            placeholder=\"Type date of birth\"\n            type=\"date\"\n            name=\"birthday\"\n            data-pattern=\"**.**.****\"\n            max={maxDate}\n            onChange={handleInputChange}\n            value={formData.birthday.split('.').reverse().join('-')}\n            onBlur={() => validateField('birthday', formData, setErrors)}\n            className={errors.birthday ? 'invalid' : ''}\n          />\n        </AddFormLabel>\n        {!!errors.birthday && <ErrorMessage message={errors.birthday} />}\n      </AddFormLabelWrapper>\n      <AddFormLabelWrapper>\n        <AddFormLabel htmlFor=\"breed\">\n          Breed:\n          <AddFormInput\n            placeholder=\"Type breed\"\n            type=\"text\"\n            name=\"breed\"\n            onChange={handleInputChange}\n            value={formData.breed}\n            onBlur={() => validateField('breed', formData, setErrors)}\n            className={errors.breed ? 'invalid' : ''}\n          />\n        </AddFormLabel>\n        {!!errors.breed && <ErrorMessage message={errors.breed} />}\n      </AddFormLabelWrapper>\n      <AddFormButtonWrapper>\n        <AddFormButtonNext\n          type=\"button\"\n          text=\"Next\"\n          icon={<TbPaw style={{ stroke: '#FEF9F9', width: '24px', height: '24px' }}/>}\n          clickHandler={nextStep}\n          filled={false}\n          isDisabled={isDisabled}\n        />\n        <AddFormButtonBack\n          type=\"button\"\n          clickHandler={backStep}\n          text=\"Back\"\n          isLink={false}\n        />\n      </AddFormButtonWrapper>\n    </PersonalFormWrapper>\n  );\n};\n\n// PersonalForm.propTypes = {\n//   formData: PropTypes.object.isRequired,\n//   setFormData: PropTypes.func.isRequired,\n//   backStep: PropTypes.func.isRequired,\n//   nextStep: PropTypes.func.isRequired,\n// };\n\nexport default PersonalForm;\n","import { useState, useEffect, useCallback } from 'react';\nimport { Formik } from 'formik';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport {\n    AddForm,\n    AddFormTitle,\n    AddFormList,\n    AddFormItem,\n    AddFormStepName,\n  } from './PetPageForm.styled';\n\nimport { addNotice } from 'redux/noticesPage/operations';\n// import { addMyPet } from 'redux/auth/operations';\nimport { addPet } from 'redux/user/operations';\n\nimport { validatePetSchema } from '../validatePet';\nimport Modal from '../Modal/Modal';\nimport AddPetModal from '../AddPetModal/AddPetModal';\n// import AddModal from 'components/ReusableComponents/Modal/AddModal';\n\nimport MoreInfo from '../MoreInfoForm/MoreInfoForm';\nimport ChooseForm from '../ChooseForm/ChooseForm';\nimport PersonalForm from '../PersonalForm/PersonalForm';\n\n\nconst AddPetPageForm = () => {\n  const [formData, setFormData] = useState({\n    category: '',\n    name: '',\n    title: '',\n    birthday: '',\n    breed: '',\n    location: '',\n    comments: '',\n    avatarUrl: null,\n    sex: '',\n    price: 0,\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [step, setStep] = useState(0);\n  const [title, setTitle] = useState('');\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n    const getPageTitle = useCallback(() => {\n    if (step < 1) return 'Add Pet';\n\n    const titles = {\n      'your pet': 'Add my pet',\n      sell: 'Add pet for sell',\n      'lost-found': 'Add to lost or found pet',\n      'for-free': 'Add to give a Pet for Adoption',\n      '': 'Add Pet',\n    };\n    return titles[formData.category] || 'Add Pet';\n  }, [formData.category, step]);\n\n  useEffect(() => {\n    setTitle(getPageTitle());\n  }, [getPageTitle]);\n\n  const steps = ['Choose Option', 'Personal Details', 'More Info'];\n\n  const toggleModal = () => {\n    setIsModalOpen(prevState => !prevState);\n  };\n\n  const setClassName = index => {\n    if (index > step) return '';\n    if (index < step) return 'completed';\n    return 'current';\n  };\n\n  const handleNextClick = e => {\n    setStep(prevState => prevState + 1);\n  };\n\n  const handlePrevClick = () => {\n    setStep(prevState => prevState - 1);\n  };\n\n  const handleSubmit = async () => {\n    \n    if (!formData.category) return;\n\n    const newFormData = new FormData();\n    newFormData.append('category', formData.category);\n    newFormData.append('name', formData.name);\n    newFormData.append('birthday', formData.birthday);\n    newFormData.append('breed', formData.breed);\n    newFormData.append('avatarUrl', formData.avatarUrl);\n\n    if (formData.comments) {\n      newFormData.append('comments', formData.comments);\n    }\n\n    if (formData.category === 'your pet') {\n      dispatch(addPet(newFormData));\n      toggleModal();\n      return;\n    }\n    \n    newFormData.delete('category', formData.category);\n    newFormData.append('title', formData.title);\n    newFormData.append('sex', formData.sex);\n    newFormData.append('location', formData.location);\n\n    if (formData.category === 'lost-found') {\n      dispatch(addNotice({ category: 'lost-found', newFormData }));\n      toggleModal();\n      return;\n    }\n\n    if (formData.category === 'for-free') {\n      dispatch(addNotice({ category: 'in-good-hands', newFormData }));\n      toggleModal();\n      return;\n    }\n\n    newFormData.append('price', formData.price);\n\n    if (formData.category === 'sell') {\n      dispatch(addNotice({ category: formData.category, newFormData }));\n      toggleModal();\n    }\n  };\n  \n    return (\n      <div step={step} category={formData.category}>\n        <AddFormTitle>{title}</AddFormTitle>\n        <AddFormList>\n          {steps.map((stepName, index) => (\n            <AddFormItem key={index} className={setClassName(index)}>\n              <AddFormStepName>{stepName}</AddFormStepName>\n            </AddFormItem>\n          ))}\n        </AddFormList>\n        <Formik\n          initialValues={formData}\n          validationSchema={validatePetSchema}\n          onSubmit={handleSubmit}\n          validateOnChange={false}\n        >\n          {() => (\n            <AddForm autoComplete=\"on\">\n              {step === 0 && (\n                <ChooseForm\n                  formData={formData}\n                  setFormData={setFormData}\n                  nextStep={handleNextClick}\n                  cancel={backLink}\n                />\n              )}\n              {step === 1 && (\n                <PersonalForm\n                  formData={formData}\n                  setFormData={setFormData}\n                  nextStep={handleNextClick}\n                  backStep={handlePrevClick}\n                />\n              )}\n              {step === 2 && (\n                <MoreInfo\n                  formData={formData}\n                  setFormData={setFormData}\n                  backStep={handlePrevClick}\n                  submit={handleSubmit}\n                />\n              )}\n            </AddForm>\n          )}\n        </Formik>\n        {isModalOpen &&\n        (\n          <Modal toggleModal={() => navigate(backLink)}>\n            <AddPetModal backLink={backLink} category={formData.category} />\n          </Modal>\n        )}\n      </div>\n    );\n  };\n  \n  export default AddPetPageForm;\n  \n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { AddFormWrapper } from './AddPetPage.styled';\nimport AddPetPageForm from '../../components/AddPetCard/PetPageForm/PetPageForm';\nconst AddPetPage = () => {\n    return (\n    <>\n    <AddFormWrapper>\n      <AddPetPageForm />\n    </AddFormWrapper>\n    <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </>\n    )\n    \n}\n\nexport default AddPetPage;\n"],"names":["AddFormWrapper","styled","colors","breakPoints","AddForm","Form","AddFormTitle","AddFormList","AddFormItem","AddFormStepName","AddFormButtonWrapper","category","isMoreInfo","validatePetSchema","Yup","shape","title","required","min","max","oneOf","name","birthday","matches","breed","avatarUrl","test","value","size","sex","location","price","positive","comments","length","validateField","fieldName","setErrors","validateAt","prevErrors","console","log","message","Backdrop","ModalWindow","CloseBtn","CloseIcon","color","style","width","height","modalContainer","document","getElementById","toggleModal","children","useEffect","onKeyDown","event","code","addEventListener","removeEventListener","createPortal","onClick","target","currentTarget","type","NextButton","filled","BackButton","BackLink","Link","text","clickHandler","isLink","path","to","fill","icon","short","isDisabled","disabled","AddFormModalWrapper","backLink","navigate","useNavigate","buttonText","stroke","ErrorText","PersonalFormWrapper","AddFormLabelWrapper","AddFormLabel","AddFormInput","Field","MoreInfoFormWrapper","FirstPartFormWrapper","SecondPartFormWrapper","FileInput","AddFormTextAreaLabel","AddFormTextArea","AddFormSexWrapper","AddFormRadioWrapper","AddFormSexLabel","AddFormImageLabel","AddFormImageWrapper","CategoryWrapper","AddFormRadioButton","RadioCategoryLabel","formData","setFormData","submit","backStep","useState","setIsDisabled","errors","imageValue","setImageValue","window","innerWidth","viewportWidth","setViewportWidth","isAvatarURLFieldValid","Boolean","isCommentsFieldValid","isLocationFieldValid","isSexFieldValid","isPriceFieldValid","handleResize","handleInputChange","e","files","fieldValue","prevState","id","onChange","checked","onBlur","htmlFor","src","URL","createObjectURL","alt","accept","placeholder","className","component","nextStep","cancel","setValues","handleCategoryChange","maxDate","setMaxDate","isNameFieldValid","isBirthdayFieldValid","isBreedFieldValid","isTitleFieldValid","now","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","getCurrentDate","inputValue","toLocaleDateString","split","reverse","join","isModalOpen","setIsModalOpen","step","setStep","setTitle","useLocation","state","from","dispatch","useDispatch","getPageTitle","useCallback","sell","setClassName","index","handleNextClick","handlePrevClick","handleSubmit","newFormData","FormData","append","addPet","delete","addNotice","map","stepName","initialValues","validationSchema","onSubmit","validateOnChange","autoComplete","Suspense","fallback"],"sourceRoot":""}