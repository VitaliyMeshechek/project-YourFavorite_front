{"version":3,"file":"static/js/652.316d41b6.chunk.js","mappings":"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","sources":["pages/FindePets/FindPeds.styled.jsx","pages/OurFriendsPage/OurFriendsPage.styled.jsx","components/Friends/FriendsItem/FriendsItem.styled.jsx","components/Friends/TimePicker/TimePicker.styled.jsx","components/Friends/TimePicker/TimePicker.jsx","../node_modules/nanoid/index.browser.js","components/Friends/FriendsItem/FriendsItem.jsx","components/Friends/FriendsList/FriendsList.styled.jsx","components/Friends/FriendsList/FriendsList.jsx","pages/OurFriendsPage/OurFriendsPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { CiSearch } from 'react-icons/ci';\n\nexport const Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  position: relative;\n\n  @media screen and (min-width: 320px) {\n    width: 320px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-left: 32px;\n    padding-right: 32px;\n    width: 768px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-left: 16px;\n    padding-right: 16px;\n    width: 1280px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 1.38;\n  color: #111111;\n\n  margin-top: 80px;\n  margin-bottom: 40px;\n`;\n\nexport const SearchForm = styled.form`\n  position: relative;\n`;\n\nexport const SvgSearch = styled(CiSearch)`\n  width: 24px;\n  height: 24px;\n  position: absolute;\n  right: 12px;\n  top: 16px;\n  color: #54adff;\n`;\n\nexport const Input = styled.input`\n  width: 608px;\n  height: 44px;\n\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1, 2;\n  align-items: center;\n  letter-spacing: 0.04em;\n  color: #888888;\n  background: #ffffff;\n\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 20px;\n\n  padding: 10px 20px;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  &:hover {\n    outline: 2px solid #ffc107;\n    transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  &:focus {\n    outline: 2px solid #ffc107;\n    transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const FriendsContainer = styled.div`\n  @media screen and (max-width: 767.98px) {\n    padding-bottom: 75px;\n  }\n  @media screen and (min-width: 768px) {\n    padding-bottom: 274px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding-bottom: 81px;\n  }\n`;\nexport const FriendsTitle = styled.h1`\n  text-align: center;\n  @media screen and (max-width: 767.98px) {\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 1.38;\n    text-align: center;\n    color: #000000;\n\n    margin-bottom: 24px;\n    display: block;\n    margin-top: 90px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 700;\n    font-size: 48px;\n    line-height: 1.38;\n    color: #000000;\n\n    margin-bottom: 40px;\n    margin-top: 90px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-style: normal;\n    font-weight: 700;\n    font-size: 48px;\n    line-height: 1.38;\n    color: #111111;\n\n    margin-bottom: 60px;\n    text-align: center;\n    margin-top: 90px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  @media screen and (max-width: 767.98px) {\n    padding: 16px 0;\n    padding-left: 12px;\n    max-width: 280px;\n    width: 100%;\n    background: #ffffff;\n    box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n    border-radius: 40px;\n    padding-right: 18px;\n    margin-top: 20px;\n    &:first-of-type {\n      margin-top: 0;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 16px 0;\n    padding-left: 12px;\n    width: 335px;\n    background: #ffffff;\n    box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n    border-radius: 40px;\n    padding-right: 10px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 16px 0;\n    padding-left: 12px;\n    width: 395px;\n    background: #ffffff;\n    box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n    border-radius: 40px;\n    padding-right: 18px;\n  }\n\n  &:hover {\n    transform: scale(1.1);\n    cursor: pointer;\n    outline: 1px solid #54adff;\n    transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  &:focus {\n    transform: scale(1.1);\n    cursor: pointer;\n    transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    outline: 1px solid #54adff;\n  }\n`;\n\nexport const FlexContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  @media screen and(max-width:767.98px) {\n    display: block;\n  }\n`;\n\nexport const ItemLinkTitle = styled.a`\n  text-decoration: none;\n  text-align: center;\n  color: #54adff;\n  display: block;\n\n  @media screen and (max-width: 767.98px) {\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 700;\n    font-size: 20px;\n    line-height: 1.35;\n    margin-bottom: 16px;\n  }\n  @media screen and (min-width: 768px) {\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 700;\n    font-size: 20px;\n    line-height: 1.35;\n    color: #54adff;\n    margin-bottom: 16px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 700;\n    font-size: 20px;\n    line-height: 27px;\n    display: block;\n    text-align: center;\n    color: #54adff;\n    margin-bottom: 16px;\n  }\n\n  &:hover {\n    color: #ffc107;\n    transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const WrapperContent = styled.div`\n  @media screen and (max-width: 767.98px) {\n  }\n  @media screen and (min-width: 1280px) {\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 16px;\n    line-height: 1.38;\n    color: #111111;\n  }\n`;\n\nexport const SpanColor = styled.span`\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.36;\n  color: #111111;\n  @media screen and(max-width: 767.98px) {\n    width: 118px;\n  }\n`;\n\nexport const TextContent = styled.div`\n  @media screen and (max-width: 767.98px) {\n    width: 114px;\n    margin-top: 12px;\n    &:first-of-type {\n      margin-top: 0;\n    }\n  }\n  @media screen and (min-width: 1280px) {\n    margin-top: 12px;\n    &:first-of-type {\n      margin-top: 0;\n    }\n  }\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.36;\n  color: #111111;\n\n  &:hover {\n    color: #ffc107;\n    transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  &:focus {\n    color: #ffc107;\n    transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const ImgWrapper = styled.img`\n  @media screen and (max-width: 767.98px) {\n    max-width: 100px;\n    width: 100%;\n    margin-right: 12px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 124px;\n    margin-right: 12px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    /* margin-top: 59px;\n    margin-bottom: 128px; */\n    width: 124px;\n    margin-right: 20px;\n  }\n`;\n\nexport const LinkItem = styled.a`\n  @media screen and (max-width: 767.98px) {\n    width: 114px;\n    display: block;\n    overflow: auto;\n  }\n`;\n\nexport const TimeText = styled.div`\n  margin-bottom: 16px;\n  font-weight: 400;\n  font-size: 11px;\n  color: #111111;\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'base-styles/variables';\n\nexport const List = styled.ul`\n  position: absolute;\n  display: grid;\n  row-gap: 4px;\n  top: 0;\n  left: -6px;\n  width: 160px;\n  padding: 6px;\n  box-sizing: border-box;\n  background: #ffffff;\n  border: 1px solid #54adff;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 8px;\n  color: #000;\n\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.33;\n  @media screen and (min-width: 768px) {\n    top: 0;\n    padding: 8px;\n  }\n  @media screen and (min-width: 1280px) {\n    top: 0;\n    padding: 10px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n\nexport const TextContent = styled.p`\n  padding: 0;\n  border: none;\n  display: block;\n  background-color: transparent;\n  font-weight: 400;\n  font-size: 12px;\n  color: #54adff;\n  width: 100%;\n  text-align: inherit;\n  cursor: pointer;\n  transition: color 250ms ease-in-out;\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 19px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n    line-height: 22px;\n  }\n  &:hover {\n    color: ${colors.blue};\n  }\n`;\n\nexport const Item = styled.li`\n  width: 100%;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: 'transparent';\n`;\n\nexport const Days = styled.div`\n  line-height: 12px;\n  font-size: 12px;\n  font-weight: 500;\n  @media screen and (min-width: 768px) {\n    line-height: 16px;\n  }\n`;\n","import React, { useState } from 'react';\n\nimport {\n  List,\n  Item,\n  Wrap,\n  Wrapper,\n  Days,\n  TextContent,\n} from './TimePicker.styled';\nimport { nanoid } from 'nanoid';\n\nexport const TimePicker = ({ workDays }) => {\n  const [isShow, setIsShow] = useState(false);\n  const days = ['MN', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU'];\n  let date = new Date();\n\n  const getWeekDay = date => {\n    return days[date.getDay()];\n  };\n\n  const newWorkDays = [...workDays].map((workDay, idx) => {\n    return { ...workDay, dayOfWeek: days[idx] };\n  });\n\n  const handleToggle = () => {\n    setIsShow(!isShow);\n  };\n  const workOurs = data => {\n    const currentDay = getWeekDay(date);\n    for (let day of data) {\n      if (currentDay === day.dayOfWeek && day.isOpen) {\n        return `${day.from} - ${day.to}`;\n      }\n      if (currentDay === day.dayOfWeek && !day.isOpen) {\n        return 'Close';\n      }\n    }\n  };\n  return (\n    <Wrapper\n      onMouseLeave={() => {\n        setIsShow(false);\n      }}\n    >\n      <TextContent onMouseOver={handleToggle}>\n        {workOurs(newWorkDays)}\n      </TextContent>\n      {isShow && (\n        <List>\n          {newWorkDays.map(({ isOpen, from, to, dayOfWeek }) => (\n            <Item key={nanoid()}>\n              {isShow && (\n                <Wrap>\n                  <div>\n                    <Days>{dayOfWeek}</Days>\n                  </div>\n\n                  {!isOpen ? (\n                    <p style={{ color: isOpen ? 'black' : 'red' }}>close</p>\n                  ) : (\n                    <div>\n                      {[from]}-{[to]}\n                    </div>\n                  )}\n                  {isOpen || isShow || Item}\n                </Wrap>\n              )}\n            </Item>\n          ))}\n        </List>\n      )}\n    </Wrapper>\n  );\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import {\n  FlexContainer,\n  ImgWrapper,\n  Item,\n  ItemLinkTitle,\n  LinkItem,\n  SpanColor,\n  TextContent,\n  WrapperContent,\n} from './FriendsItem.styled';\n\nimport { TimePicker } from '../TimePicker/TimePicker';\n\nexport const FriendsItem = ({\n  friend: { title, workDays, address, email, phone, url, imageUrl, addressUrl },\n}) => {\n  if (imageUrl === null) {\n    imageUrl = 'https://plastyr.in.ua/image/catalog/no-photo.png';\n  }\n\n  return (\n    <Item>\n      <ItemLinkTitle href={url} target=\"blank\">\n        {title}\n      </ItemLinkTitle>\n      <FlexContainer>\n        <ImgWrapper src={imageUrl} alt={title} target=\"blank\" />\n        <WrapperContent>\n          <TextContent>\n            <SpanColor>time:</SpanColor>\n            <br />\n            {workDays?.length ? (\n              <TimePicker workDays={workDays} />\n            ) : (\n              <TextContent>Day and night</TextContent>\n            )}\n          </TextContent>\n          <TextContent>\n            <LinkItem href={addressUrl} target=\"blank\">\n              <SpanColor>adress:</SpanColor>\n              <br />\n              {address}\n            </LinkItem>\n          </TextContent>\n          <TextContent>\n            <LinkItem href={`mailto:${email}`} target=\"blank\">\n              <SpanColor>email:</SpanColor>\n              <br />\n              {email}\n            </LinkItem>\n          </TextContent>\n          <TextContent>\n            <LinkItem target=\"blank\" href={`tel:${phone}`}>\n              <SpanColor>phone:</SpanColor>\n              <br />\n              {phone}\n            </LinkItem>\n          </TextContent>\n        </WrapperContent>\n      </FlexContainer>\n    </Item>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  @media screen and (max-width: 767.98px) {\n    display: block;\n    gap: 0;\n  }\n  display: flex;\n  flex-wrap: wrap;\n  gap: 32px;\n  list-style: none;\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n    flex-basis: calc((100% - 4 * 32px) / 3);\n  }\n`;\n","import { FriendsItem } from '../FriendsItem/FriendsItem';\nimport { List } from './FriendsList.styled';\n\nexport const FriendsList = ({ friends }) => {\n  return (\n    <List>\n      {friends.map(friend => (\n        <FriendsItem key={friend.title} friend={friend} />\n      ))}\n    </List>\n  );\n};\n","import { Container } from 'pages/FindePets/FindPeds.styled';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { FriendsContainer, FriendsTitle } from './OurFriendsPage.styled';\nimport { FriendsList } from '../../components/Friends/FriendsList/FriendsList';\nimport sponsors from '../../sponsors.json';\n\nconst OurFriendsPage = () => {\n  return (\n    <Container>\n      <FriendsContainer>\n        <FriendsTitle>Our friends</FriendsTitle>\n        <FriendsList friends={sponsors} />\n      </FriendsContainer>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default OurFriendsPage;\n"],"names":["Container","styled","CiSearch","FriendsContainer","FriendsTitle","Item","FlexContainer","ItemLinkTitle","WrapperContent","SpanColor","TextContent","ImgWrapper","LinkItem","List","Wrapper","colors","Wrap","Days","TimePicker","workDays","useState","isShow","setIsShow","days","date","Date","newWorkDays","map","workDay","idx","dayOfWeek","onMouseLeave","onMouseOver","data","currentDay","getDay","getWeekDay","day","isOpen","from","to","workOurs","style","color","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","nanoid","FriendsItem","friend","title","address","email","phone","url","imageUrl","addressUrl","href","target","src","alt","length","FriendsList","friends","sponsors","Suspense","fallback"],"sourceRoot":""}